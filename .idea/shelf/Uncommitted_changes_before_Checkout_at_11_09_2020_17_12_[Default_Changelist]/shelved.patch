Index: javaCoreOneLvl/Lesson4/src/XOgame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class XOgame {\r\n    static final int SIZE = 3;\r\n    static final int DOT_TO_WIN = 3;\r\n\r\n    static final char DOT_X = 'X';\r\n    static final char DOT_O = 'O';\r\n    static final char DOT_EMPTY = '.';\r\n\r\n    static char[][] map;\r\n\r\n    static Scanner sc = new Scanner(System.in);\r\n    static Random random = new Random();\r\n\r\n    public static void main(String[] args) {\r\n        initMap();\r\n        printMap();\r\n\r\n        while (true) {\r\n            humanTurn();\r\n            printMap();\r\n            if (checkWin(DOT_X)) {\r\n                System.out.println(\"Вы победили! Поздравляем!\");\r\n                break;\r\n            }\r\n            if (isFull()) {\r\n                System.out.println(\"Ничья\");\r\n                break;\r\n            }\r\n\r\n            aiTurn();\r\n            printMap();\r\n            if (checkWin(DOT_O)) {\r\n                System.out.println(\"Компьютер победил.\");\r\n                break;\r\n            }\r\n            if (isFull()) {\r\n                System.out.println(\"Ничья\");\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static void initMap() {\r\n        map = new char[SIZE][SIZE];\r\n        for (int i = 0; i < map.length; i++) {\r\n            for (int j = 0; j < map[i].length; j++) {\r\n                map[i][j] = DOT_EMPTY;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void printMap() {\r\n        System.out.print(\"  \");\r\n        for (int i = 1; i <= map.length; i++) {\r\n            System.out.print(i + \" \");\r\n        }\r\n        System.out.println();\r\n        for (int i = 0; i < map.length; i++) {\r\n            System.out.print(i + 1 + \" \");\r\n            for (int j = 0; j < map[i].length; j++) {\r\n                System.out.printf(\"%c \", map[i][j]);\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n\r\n    public static void humanTurn() {\r\n        int x;\r\n        int y;\r\n\r\n        do {\r\n            System.out.println(\"input X Y\");\r\n            x = sc.nextInt() - 1;\r\n            y = sc.nextInt() - 1;\r\n        } while (!isCellValid(y, x));\r\n\r\n        map[y][x] = DOT_X;\r\n    }\r\n\r\n    public static boolean isCellValid(int y, int x) {\r\n        if (y < 0 || x < 0 || y >= SIZE || x >= SIZE) {\r\n            return false;\r\n        }\r\n        return map[y][x] == DOT_EMPTY;\r\n//        if (map[y][x] == DOT_EMPTY) {\r\n//            return true;\r\n//        } else {\r\n//            return false;\r\n//        }\r\n    }\r\n\r\n    public static void aiTurn() {\r\n        int x;\r\n        int y;\r\n\r\n        do {\r\n            x = random.nextInt(SIZE);\r\n            y = random.nextInt(SIZE);\r\n        } while (!isCellValid(y, x));\r\n\r\n        map[y][x] = DOT_O;\r\n    }\r\n\r\n    public static boolean isFull() {\r\n        for (int i = 0; i < SIZE; i++) {\r\n            for (int j = 0; j < SIZE; j++) {\r\n                if (map[i][j] == DOT_EMPTY) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean checkWin(char c) {\r\n        int count = 0;\r\n        for (int y = 0; y < map.length; y++) {\r\n            for (int x = 0; x < map[y].length; x++) {\r\n                if (map[y][x] == DOT_EMPTY) {\r\n                    break;\r\n                } else {\r\n                    for (int i = 0; i < DOT_TO_WIN; i++) {\r\n                        if ((map[x][y] == c) && ((y + i) < SIZE) && (map[x][y + i] == c)) {\r\n                            count++;\r\n                        }\r\n                        if (count == DOT_TO_WIN) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    count = 0;\r\n                    for (int i = 0; i < DOT_TO_WIN; i++) {\r\n                        if ((map[y][x] == c) && ((y + i) < SIZE) &&\r\n                                ((map[y + i][x]) == c)) {\r\n                            count++;\r\n                        }\r\n                        if (count == DOT_TO_WIN) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    count = 0;\r\n                    for (int i = 0; i < DOT_TO_WIN; i++) {\r\n                        if ((map[x][y] == c) && ((y + i) < SIZE) && ((x + i) < SIZE) &&\r\n                                (map[x + i][y + i] == c)) {\r\n                            count++;\r\n                        }\r\n                        if (count == DOT_TO_WIN) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    count = 0;\r\n                    for (int i = 0; i < DOT_TO_WIN; i++ ) {\r\n                        if ((map[x][y] == c) && ((x - i) >= 0) && ((y + i) < SIZE) && (map[x - i][y + i] == c)) {\r\n                            count++;\r\n                        }\r\n                        if (count == DOT_TO_WIN ) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    count = 0;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- javaCoreOneLvl/Lesson4/src/XOgame.java	(revision e38dc75ba2448f979b7f0b5e1c34276a877ef39a)
+++ javaCoreOneLvl/Lesson4/src/XOgame.java	(date 1598977846284)
@@ -2,8 +2,8 @@
 import java.util.Scanner;
 
 public class XOgame {
-    static final int SIZE = 3;
-    static final int DOT_TO_WIN = 3;
+    static final int SIZE = 5;
+    static final int DOT_TO_WIN = 4;
 
     static final char DOT_X = 'X';
     static final char DOT_O = 'O';
